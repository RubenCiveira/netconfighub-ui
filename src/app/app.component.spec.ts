/* @autogenerated */
import { TestBed } from '@angular/core/testing';
import { AppComponent } from './app.component';
import { Component } from '@angular/core';
import { provideRouter } from '@angular/router';
import { TranslocoService } from '@jsverse/transloco';
import { AppStateService } from '@common/context/state/app-state.service';
import { InstrumentationService } from '@common/context/observability/instrumentation.service';
import { LayoutStateService } from './bootstrap/layout/container/service/layout-state.service';
import { of } from 'rxjs';

@Component({ selector: 'router-outlet', template: '' })
class MockRouterOutlet {}

// Mock para TranslocoService
class MockTranslocoService {
  translate = jasmine.createSpy('translate').and.returnValue('');
  setActiveLang = jasmine.createSpy('setActiveLang').and.returnValue('');
}

class MockAppStateService {
  language = of('lang');
}
class MockInstrumentationService {
  activate = jasmine.createSpy('activate').and.returnValue('');
}
class MockLayoutStateService {
  menu = {
    set: jasmine.createSpy('set').and.returnValue(''),
  };
}

describe('AppComponent', () => {
  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [AppComponent, MockRouterOutlet], // Importar AppComponent en vez de declararlo
      providers: [
        provideRouter([]),
        { provide: TranslocoService, useClass: MockTranslocoService },
        { provide: AppStateService, useClass: MockAppStateService },
        { provide: InstrumentationService, useClass: MockInstrumentationService },
        { provide: LayoutStateService, useClass: MockLayoutStateService },
      ], // Reemplazo de RouterTestingModule
    }).compileComponents();
  });

  it('should create the component', () => {
    const fixture = TestBed.createComponent(AppComponent);
    const app = fixture.componentInstance;
    expect(app).toBeTruthy();
  });

  it('should contain a router-outlet', () => {
    const fixture = TestBed.createComponent(AppComponent);
    fixture.detectChanges();
    const compiled = fixture.nativeElement;
    expect(compiled.querySelector('router-outlet')).toBeTruthy();
  });
});
