/* @autogenerated */
import { Signal } from '@angular/core';
import { ProjectDeviceProjection } from '@features/installations/project-device/model/project-device.model';

export interface DeviceCheck {
  uid: string;
  projectDevice: { $ref: string } | null;
  result: 'pass' | 'fail';
  details?: string;
  checkedAt: Date;
  checkedBy: string;
  version?: number;
}
export interface DeviceCheckFilter {
  search?: string;
  uids?: string[];
  limit?: number;
  order?: string;
  result?: 'pass' | 'fail';
  projectDevice?: string[];
  projectDevices?: string[];
}
export interface DeviceCheckProjection {
  uid: string;
  projectDevice: Signal<ProjectDeviceProjection | null>;
  result: 'pass' | 'fail';
  details?: string;
  checkedAt: Date;
  checkedBy: string;
  version?: number;
}
export function deviceCheckProjectionToValue(
  proyection: DeviceCheck | DeviceCheckProjection | null | undefined,
): DeviceCheck | null {
  const valueOfProjectDevice =
    typeof proyection?.projectDevice == 'function' ? proyection?.projectDevice()?.uid : proyection?.projectDevice?.$ref;
  return proyection
    ? {
        uid: proyection.uid,
        projectDevice: valueOfProjectDevice ? { $ref: valueOfProjectDevice } : null,
        result: proyection.result,
        details: proyection.details,
        checkedAt: proyection.checkedAt,
        checkedBy: proyection.checkedBy,
        version: proyection.version,
      }
    : null;
}
