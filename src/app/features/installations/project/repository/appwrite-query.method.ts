/* @autogenerated */
import { Query } from 'appwrite';
import { ProjectFilter } from '../model/project.model';
import { Observable, of } from 'rxjs';
export function appwriteQuery(query: ProjectFilter): Observable<string[]> {
  const constraints: string[] = [];
  if (query.name) {
    constraints.push(Query.equal('name', query.name as any));
  }
  if (query.site) {
    constraints.push(Query.equal('site', query.site as any));
  }
  if (query.sites) {
    const isArray = Array.isArray(query.sites);
    if (isArray && query.sites?.length > 1) {
      const every: string[] = [];
      query.sites.forEach((val) => every.push(Query.equal('site', val)));
      constraints.push(Query.or(every));
    } else if (isArray) {
      constraints.push(Query.equal('site', query.sites[0]));
    } else if (typeof query.sites === 'string') {
      constraints.push(Query.equal('site', query.sites as any));
    }
  }
  return of(constraints);
}
