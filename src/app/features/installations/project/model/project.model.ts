/* @autogenerated */
import { SiteProjection } from '@features/organization/site/model/site.model';
import { Signal } from '@angular/core';

export interface Project {
  uid: string;
  site: { $ref: string } | null;
  name: string;
  description?: string;
  operationMode: 'single' | 'double';
  plannedAt: Date;
  plannedConfigAt?: Date;
  status: 'draft' | 'planned' | 'in-progress' | 'completed';
  version?: number;
}
export interface ProjectFilter {
  search?: string;
  uids?: string[];
  limit?: number;
  order?: string;
  name?: string;
  site?: string[];
  sites?: string[];
}
export interface ProjectProjection {
  uid: string;
  site: Signal<SiteProjection | null>;
  name: string;
  description?: string;
  operationMode: 'single' | 'double';
  plannedAt: Date;
  plannedConfigAt?: Date;
  status: 'draft' | 'planned' | 'in-progress' | 'completed';
  version?: number;
}
export function projectProjectionToValue(proyection: Project | ProjectProjection | null | undefined): Project | null {
  const valueOfSite = typeof proyection?.site == 'function' ? proyection?.site()?.uid : proyection?.site?.$ref;
  return proyection
    ? {
        uid: proyection.uid,
        site: valueOfSite ? { $ref: valueOfSite } : null,
        name: proyection.name,
        description: proyection.description,
        operationMode: proyection.operationMode,
        plannedAt: proyection.plannedAt,
        plannedConfigAt: proyection.plannedConfigAt,
        status: proyection.status,
        version: proyection.version,
      }
    : null;
}
