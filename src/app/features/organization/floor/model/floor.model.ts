/* @autogenerated */
import { SiteProjection } from '@features/organization/site/model/site.model';
import { Signal } from '@angular/core';

export interface Floor {
  uid: string;
  name: string;
  site: { $ref: string } | null;
  imagePath: string;
  version?: number;
}
export interface FloorFilter {
  search?: string;
  uids?: string[];
  limit?: number;
  order?: string;
  name?: string;
  site?: string[];
  sites?: string[];
}
export interface FloorProjection {
  uid: string;
  name: string;
  site: Signal<SiteProjection | null>;
  imagePath: string;
  version?: number;
}
export function floorProjectionToValue(proyection: Floor | FloorProjection | null | undefined): Floor | null {
  const valueOfSite = typeof proyection?.site == 'function' ? proyection?.site()?.uid : proyection?.site?.$ref;
  return proyection
    ? {
        uid: proyection.uid,
        name: proyection.name,
        site: valueOfSite ? { $ref: valueOfSite } : null,
        imagePath: proyection.imagePath,
        version: proyection.version,
      }
    : null;
}
