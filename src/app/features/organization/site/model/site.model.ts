/* @autogenerated */
import { ClientProjection } from '@features/organization/client/model/client.model';
import { Signal } from '@angular/core';

export interface Site {
  uid: string;
  client: { $ref: string } | null;
  name: string;
  address?: string;
  version?: number;
}
export interface SiteFilter {
  search?: string;
  uids?: string[];
  limit?: number;
  order?: string;
  name?: string;
  client?: string[];
  clients?: string[];
}
export interface SiteProjection {
  uid: string;
  client: Signal<ClientProjection | null>;
  name: string;
  address?: string;
  version?: number;
}
export function siteProjectionToValue(proyection: Site | SiteProjection | null | undefined): Site | null {
  const valueOfClient = typeof proyection?.client == 'function' ? proyection?.client()?.uid : proyection?.client?.$ref;
  return proyection
    ? {
        uid: proyection.uid,
        client: valueOfClient ? { $ref: valueOfClient } : null,
        name: proyection.name,
        address: proyection.address,
        version: proyection.version,
      }
    : null;
}
