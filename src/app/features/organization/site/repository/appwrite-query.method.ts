/* @autogenerated */
import { Query } from 'appwrite';
import { SiteFilter } from '../model/site.model';
import { Observable, of } from 'rxjs';
export function appwriteQuery(query: SiteFilter): Observable<string[]> {
  const constraints: string[] = [];
  if (query.name) {
    constraints.push(Query.equal('name', query.name as any));
  }
  if (query.client) {
    constraints.push(Query.equal('client', query.client as any));
  }
  if (query.clients) {
    const isArray = Array.isArray(query.clients);
    if (isArray && query.clients?.length > 1) {
      const every: string[] = [];
      query.clients.forEach((val) => every.push(Query.equal('client', val)));
      constraints.push(Query.or(every));
    } else if (isArray) {
      constraints.push(Query.equal('client', query.clients[0]));
    } else if (typeof query.clients === 'string') {
      constraints.push(Query.equal('client', query.clients as any));
    }
  }
  return of(constraints);
}
