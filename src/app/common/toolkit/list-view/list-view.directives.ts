/* @autogenerated */
import { Component, computed, contentChildren, Directive, input, TemplateRef } from '@angular/core';

@Directive({
  selector: 'ng-template[listViewColumn]',
  standalone: false,
})
export class ListViewColumnDirective {
  title = input<string>();
  tooltip = input<string>();
  width = input<number>(100);
  factor = input<number>(1);

  displayWidth: number = 0;
  displayHeight: number = 0;
  visible: boolean = true;
  constructor(public template: TemplateRef<any>) {}
}

@Directive({
  selector: 'ng-template[listViewRowTitle]',
  standalone: false,
})
export class ListViewTitleDirective {
  constructor(public template: TemplateRef<any>) {}
}

@Directive({
  selector: 'ng-template[listViewRowSubtitle]',
  standalone: false,
})
export class ListViewSubtitleDirective {
  constructor(public template: TemplateRef<any>) {}
}

@Directive({
  selector: 'ng-template[listViewRowText]',
  standalone: false,
})
export class ListViewTextDirective {
  constructor(public template: TemplateRef<any>) {}
}

@Directive({
  selector: 'ng-template[listViewRowTrailing]',
  standalone: false,
})
export class ListViewTrailingDirective {
  constructor(public template: TemplateRef<any>) {}
}

@Directive({
  selector: 'ng-template[listViewRowAction]',
  standalone: false,
})
export class ListViewActionDirective {
  constructor(public template: TemplateRef<any>) {}
}

@Directive({
  selector: 'ng-template[listViewRowIcon]',
  standalone: false,
})
export class ListViewIconDirective {
  constructor(public template: TemplateRef<any>) {}
}

@Component({
  selector: 'list-view-table',
  template: '',
  standalone: false,
})
export class ListViewTableTemplate {
  // @ContentChildren(ListViewColumnDirective)
  // columns!: QueryList<ListViewColumnDirective>;

  columnsTemplates = contentChildren(ListViewColumnDirective);
  columns = computed(() => {
    return this.columnsTemplates() || [];
  });
}
@Component({
  selector: 'list-view-row',
  template: '',
  standalone: false,
})
export class ListViewRowTemplate {
  iconTemplates = contentChildren(ListViewIconDirective);
  icon = computed(() => {
    const value = this.iconTemplates();
    return value.length > 0 ? value[0] : undefined;
  });

  titleTemplate = contentChildren(ListViewTitleDirective);
  title = computed(() => {
    const value = this.titleTemplate();
    return value.length > 0 ? value[0] : null;
  });

  subtitleTemplate = contentChildren(ListViewSubtitleDirective);
  subtitle = computed(() => {
    const value = this.subtitleTemplate();
    return value.length > 0 ? value[0] : null;
  });

  textTemplate = contentChildren(ListViewTextDirective);
  text = computed(() => {
    const value = this.textTemplate();
    return value.length > 0 ? value[0] : null;
  });

  trailingTemplate = contentChildren(ListViewTrailingDirective);
  trailing = computed(() => {
    const value = this.trailingTemplate();
    return value.length > 0 ? value[0] : null;
  });

  actionTemplate = contentChildren(ListViewActionDirective);
  action = computed(() => {
    const value = this.actionTemplate();
    return value.length > 0 ? value[0] : null;
  });
}
