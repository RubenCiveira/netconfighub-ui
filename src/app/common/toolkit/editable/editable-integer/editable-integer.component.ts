/* @autogenerated */
import { CommonModule } from '@angular/common';
import { Component, input } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { TranslocoModule } from '@jsverse/transloco';
import { BaseEditable } from '../base-editable';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatInputModule } from '@angular/material/input';

@Component({
  template: `
    <mat-form-field>
      <mat-label>{{ label() + '.label' | transloco }}</mat-label>
      <input
        matInput
        [required]="required()"
        type="number"
        placeholder="{{ label() + '.placeholder' | transloco }}"
        [attr.min]="minValue()"
        [attr.max]="maxValue()"
        [formControl]="control"
        onkeypress="return (event.charCode >= 48 && event.charCode <= 57)"
      />
      @for (error of errorMessages(); track $index) {
        <mat-error>
          {{ label() + '.error.' + error | transloco }}
        </mat-error>
      }
    </mat-form-field>
  `,
  selector: 'editable-integer',
  imports: [ReactiveFormsModule, MatFormFieldModule, MatInputModule, CommonModule, TranslocoModule],
  providers: BaseEditable.getAccessorProvider(EditableIntegerComponent),
  standalone: true,
})
export class EditableIntegerComponent extends BaseEditable<string> {
  minValue = input<number>();
  maxValue = input<number>();
}
