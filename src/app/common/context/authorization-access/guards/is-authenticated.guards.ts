/* @autogenerated */
import { inject } from '@angular/core';
import { CanActivateChildFn, Router, RouterStateSnapshot } from '@angular/router';
import { IdentityService } from '@common/context/identity/identity.service';
import { UserInfo } from '@common/context/identity/user-info.model';
import { AppStateService } from '@common/context/state/app-state.service';
import { map, mergeMap, take } from 'rxjs';

export const isAuthenticated: CanActivateChildFn = (_route, state) => {
  return apply(state, (user) => user.authenticated);
};

function apply(state: RouterStateSnapshot, callback: (user: UserInfo) => boolean | undefined) {
  const identityService = inject(IdentityService); // Inyectar el servicio de autenticación
  const appState = inject(AppStateService);
  const router = inject(Router); // Inyecta el Router para la redirección

  return identityService.bootstrap('main').pipe(
    take(1),
    mergeMap((_) => {
      return appState.userInfo['main'];
    }),
    map((info) => {
      const parentUrl = state.url.split('/').slice(0, -1).join('/'); // Obtener la ruta del padre
      return callback(info) ? true : router.createUrlTree([`/unauthorized`]);
    }),
  );
}
