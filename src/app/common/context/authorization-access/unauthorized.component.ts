/* @autogenerated */
import { Component, OnDestroy, Signal } from '@angular/core';
import { toSignal } from '@angular/core/rxjs-interop';
import { ActivatedRoute, Router } from '@angular/router';
import { AppStateService } from '@common/context/state/app-state.service';
import { Subscription } from 'rxjs';

@Component({
  selector: 'unauthorized-page',
  standalone: true,
  template: '<h1>unauthorized</h1>',
})
export class UnauthorizedComponent implements OnDestroy {
  currentLanguage: Signal<string | undefined>;
  currentTenant: Signal<string | undefined>;

  private suscription = new Subscription();
  constructor(
    private route: ActivatedRoute,
    private router: Router,
    private readonly state: AppStateService,
  ) {
    this.currentLanguage = toSignal(this.state.language);
    this.currentTenant = toSignal(this.state.tenant);

    this.suscription.add(
      this.state.userInfo['main'].subscribe((user) => {
        if (user.authenticated) {
          const returnUrl = this.route.snapshot.queryParamMap.get('returnUrl');
          if (returnUrl) {
            this.router.navigateByUrl(returnUrl);
          } else {
            this.router.navigate([this.currentLanguage(), this.currentTenant()]);
          }
        }
      }),
    );
  }

  ngOnDestroy(): void {
    this.suscription.unsubscribe();
  }
}
