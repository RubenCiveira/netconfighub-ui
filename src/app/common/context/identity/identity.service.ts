/* @autogenerated */
import { Inject, Injectable } from '@angular/core';
import { IDENTITY_PROVIDER, IdentityProvider } from './identity-provider.interface';
import { AppConfigService } from '../config/app-config.service';
import { Observable } from 'rxjs';

@Injectable({ providedIn: 'root' })
export class IdentityService {
  private map = {} as any;

  public constructor(appConfig: AppConfigService, @Inject(IDENTITY_PROVIDER) identitieProviders: IdentityProvider[]) {
    appConfig['identity'].subscribe((identititesConf) => {
      Object.entries(identititesConf).forEach(([key, value]) => {
        const valids = identitieProviders.map((p) => p.accept((value as any).type, key)).filter((p) => p != null);
        if (valids.length === 1) {
          this.map[key] = valids[0];
        } else if (valids.length) {
          console.error('Hay m√°s de un manager para ' + (value as any).type + ' de ' + key);
        } else {
          console.error('No hay un manager para ' + (value as any).type + ' de ' + key);
        }
      });
    });
  }

  bootstrap(name: string): Observable<void> {
    return this.map[name].bootstrap();
  }

  login(name: string): void {
    this.map[name]?.login();
  }
  logout(name: string): void {
    this.map[name]?.logout();
  }
}
