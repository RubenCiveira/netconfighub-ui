# @autogenerated
# Etapa 1: Construcción de la aplicación Angular
FROM node:20 AS build
WORKDIR /app

# Copiar archivos necesarios e instalar dependencias
COPY package.json package-lock.json ./
RUN npm install --legacy-peer-deps

# Copiar el código fuente
COPY . .

# Construcción de la aplicación Angular con base href dinámico
ARG APP_ROOT=/
RUN npm run build -- --base-href=%APP_ROOT% --output-path=/app/build

# Etapa 2: Servidor con Nginx
FROM nginx:1.25-alpine AS deploy
WORKDIR /usr/share/nginx/html

# Limpiar archivos por defecto de Nginx
RUN rm -rf ./*

# Copiar la aplicación Angular compilada
COPY --from=build /app/build ./

# Crear entrypoint dinámico directamente en el Dockerfile
RUN echo '#!/bin/sh' > /entrypoint.sh && \
    echo 'APP_ROOT=${APP_ROOT:-"/"}' >> /entrypoint.sh && \
    echo 'echo "Reemplazando %APP_ROOT% en index.html con: $APP_ROOT"' >> /entrypoint.sh && \
    echo 'sed -i "s|%APP_ROOT%|$APP_ROOT|g" /usr/share/nginx/html/index.html' >> /entrypoint.sh && \
    echo 'exec nginx -g "daemon off;"' >> /entrypoint.sh && \
    chmod +x /entrypoint.sh

# Crear configuración de Nginx en el Dockerfile
# Crear configuración de Nginx en el directorio correcto
RUN echo 'server {' > /etc/nginx/conf.d/default.conf && \
    echo '    listen 80;' >> /etc/nginx/conf.d/default.conf && \
    echo '    server_name _;' >> /etc/nginx/conf.d/default.conf && \
    echo '    root /usr/share/nginx/html;' >> /etc/nginx/conf.d/default.conf && \
    echo '    index index.html;' >> /etc/nginx/conf.d/default.conf && \
    echo '' >> /etc/nginx/conf.d/default.conf && \
    echo '    location / {' >> /etc/nginx/conf.d/default.conf && \
    echo '        try_files $uri /index.html;' >> /etc/nginx/conf.d/default.conf && \
    echo '    }' >> /etc/nginx/conf.d/default.conf && \
    echo '' >> /etc/nginx/conf.d/default.conf && \
    echo '    location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg|json)$ {' >> /etc/nginx/conf.d/default.conf && \
    echo '        expires 6M;' >> /etc/nginx/conf.d/default.conf && \
    echo '        access_log off;' >> /etc/nginx/conf.d/default.conf && \
    echo '        add_header Cache-Control "public";' >> /etc/nginx/conf.d/default.conf && \
    echo '    }' >> /etc/nginx/conf.d/default.conf && \
    echo '}' >> /etc/nginx/conf.d/default.conf

# Exponer el puerto 80
EXPOSE 80

# Usar el entrypoint dinámico
CMD ["/entrypoint.sh"]
